29 June 1999   Small bugs found in smlline.cxx & smllinevector.cxx

               Folder v0.1 is a snapshot of the directory
................................................................................
 -> 6 July 1999
             1)  Class registrar...new method added  addRegardless. This will
                add an entry even if an entry with the same name already exists

             2)  Class SMLLine...new method subobjecLine. Returns true if the
                line is subobject line

             3)  Class SMLLineVector.  Method out now takes as an argument 
                 offset which is then printed before every SML Line
................................................................................
27-28 September 1999

             smlline.cxx  and smlline.hxx   method whenLine and instructionLine
             addeed
................................................................................
 9 November 1999

             a new subroutine added to utilities.hxx & cxx called getType
................................................................................
10 November 1999

            a new subroutine added to utilities.hxx & cxx called getName 
................................................................................
15 November 1999
           new subroutines added to utilities.hxx&cxx  :  getValue  & getString
================================================================================
    Folder  v0.3 is a snapshot
================================================================================
25 November 1999

           some changes were done to utilities.cxx and smlline.cxx which were
           not documented.
================================================================================
    Folder  v0.4 is a snapshot
================================================================================
13 February 2000

         a new subroutine added to utilities.hxx & .cxx : getNextToken
---------------------------------------------------------------------------------
22 February 2000

        namevector.hxx&cxx   method out now takes an offset
----------------------------------------------------------------------------------
29 - 30 Apr 2000

     new subroutine  process_line_forTrans   this processes SML line in identical
        manner as the fortran translator does. This way one hopefully succeeds
        in having the condition comment on sobj file the same.
----------------------------------------------------------------------------------
 2 - 4 May 2000

        smlline.hxx & cxx  removed methods: objectLine, subObjectLine, 
                     onjectSetLine, parametersLine and stateLine.
                 they are all replaced by new method  objectKeyword
----------------------------------------------------------------------------------
 4 - 5 May 2000

       smlline.hxx & cxx  just deleting some irrelevant comments.
--------------------------------------------------------------------------------
16-17 May 2000
       smlline.hxx&cxx   commented out method actionLine   and   whenLine
--------------------------------------------------------------------------------
18 May 2000

       smlline.hxx&cxx   commented out methods actionLine and whenLine deleted

            method instructionLine  completelly re-hacked.
--------------------------------------------------------------------------------
 7 August 2000

      typedefs.hxx   check on WIN32 put in for definition of bool
--------------------------------------------------------------------------------
 8 August 2000

      smlline.cxx   bug fixed.  Check on 'else if' was missing

      utilities.cxx  problem with sscanf reading floating points on WIN32
                     this has to be investigated ***************
--------------------------------------------------------------------------------
11 August 2000

   Changed the name strcasecmp  to my_strcasecmp in utilities.cxx,hxx & 
   gettoken.cxx

   changed typedefs.hxx   def bool only on VMS at the moment
-------------------------------------------------------------------------------
12 August 2000

   utilities.cxx   corrected a small declaration problem in firstNonBlank func
                   caught by Gnu compiler

       had problem with readLine on HP. looks like Gnu bug and should be 
       investigated *******************
       for the moment fixed it by increasing buffer size to 133 characters which
       is more than adequate. 
---------------------------------------------------------------------------------
21 September 2000

   utilities.cxx   function firstNonBlank(SMLlineVector....   rehacked.
                   made more robust, better defined .... see the documentation
--------------------------------------------------------------------------------
26 September 2000
   utilities.cxx   function getNextToken(char str[]....)  rehacked
                  made more robust, better defined .... see the documentation
       Tested on all the available SML code
--------------------------------------------------------------------------------
 8 June 2001

   smlline.cxx  1) Keyword Object_set changed ObjectSet

		2) in addition to 'do', insert and remove are also interpreted
                   as do instruction
--------------------------------------------------------------------------------
10 June 2001
   namelist.hxx and namelist.cxx  new class NameList
---------------------------------------------------------------------------------
13 June 2001
   namelist.hxx & cxx do not need utilities.hxx...removed.  Be carefull!
   state manager has one as well.
------------------------------------------------------------------------------
 2 July 2001
  smlline.cxx   it deals with insert and remove instruction separately from
                do instruction
--------------------------------------------------------------------------------
 4 July 2001   namelist.hxx & cxx    new method removeAll() that removes all
                      the items from the list.
                      Method out improved.
------------------------------------------------------------------------------
23 July 2001  namelist.hxx & cxx   added copy constructor, assignement operator
                      and destructor
--------------------------------------------------------------------------------
29 January 2002 namevector.hxx & cxx ...new method isPresent(name) which
                checks for existence of name in the vector.

10 July 2002 (Boda Franek)

      namevector.hxx  .. includes typedefs.hxx to work on all platforms
      
31 July 2002  (Boda Franek)

     utilities.cxx   increasing buffer length from 133 to 1024...famous
           Solaris 8 bug
--------------------------------------------------------------------------------
15 October 2002 (Boda Franek)
    smlline.hxx, smlline.cxx  added another constructer to SMLline class
      SMLline(const int linnum, const char* lineBody)
--------------------------------------------------------------------------------
17 October 2002 (Boda Franek)
   name.hxx, name.cxx  new assignement operator that converts an integer
     into Name class
--------------------------------------------------------------------------------
 4 February 2003 (Boda Franek)
   smlline.cxx...  will recognise end_in_state line and classifies it as
                   terminate_action

 5 February 2003 (Boda Franek)
   smlline.cxx ... will recognise removeall instruction
   
 6 February 2003 (Boda Franek)
 
   smlline.cxx .... end_in_state  -->  endInState

 1 May 2003
 
   smlline.cxx... will also recognise 'move_to' line and classifies it as
                  terminate_action

                  it will also recognise 'remove_all' as a synonym to removeall
		  
 31-July-2003 (Boda Franek)
 
   namevector.cxx ... dynamicaly increasing allocation increment as necessary
   
 05 August 2003 (Boda Franek)
 
   name.cxx ... redundant code taken out of == method
   
 ->16 August 2003 (Boda Franek)
 
  - NmdPtnr class (nmdptnr.cxx&hxx)  ... operator == added.
   
   objects of the class consists of a name and a pointer. By definition
   two objects are equal when their names are equal regardless of the pointers 
   
  - new class NmdPtnrList  (nmdptnrlist.hxx&cxx)
  
  27 October 2003
    improved diagnostics in  firstNonBlank   and  getNextToken 
          file: utilities.cxx
=================================  v16  =======================================	  
   8 November 2003 (Boda Franek)
     
     NameVector class : new method
          NameVector& exclusiveUpdate(const NameVector& vector)
	  
	      elements in vector, that are not already present, are included
	      in the current class object
=================================  v18  =======================================
  20 November 2003 (Boda Franek)
  
     - NameList class : method add..making small mod to make it faster
                        namelist.cxx
			
     - NameVector class : method  Name operator[]   changed to Name& operator
                       this saves 1 copy
		       namevector.cxx & hxx
-----------------------------------------------------------------------------

 24 March 2004 (Boda Franek)

    - recognition of a comment line made simpler

======================  v18r2-c1  ========================================

=== 02-April-2004:12:21 ==========  v20  =================
=== 01-June-2004:17:23 ==========  v21  =================
=== 24-June-2004:12:17 ==========  v21r1  =================
=== 10-August-2004:13:11 ==========  v22  =================
=== 20-September-2004:12:06 ==========  v23  =================
=== 04-October-2004:12:45 ==========  v23r1  =================

 27-October-2004
 
 iostream migration
 
 a) two new files: iostream.inc  & fstream.inc 
 b) many files modified. This consisted in replacing 
    #include <iostream.h> by #include <iostream.inc>   or/and
    #include <fstream.h> by #include <fstream.inc>
---------------------------------------------------------------------------
 28-October-2004 (Boda Franek)
 
   iostream migration
   ------------------
   - iostream.inc & fstream.inc   removed
   -  usage of the above files replaced by smixx_common.hxx
   
    
=== 29-October-2004:19:52 ==========  v24r1  =================
=== 25-November-2004:16:15 ==========  v24r2  =================
=== 22-December-2004:14:33 ==========  v25  =================
=== 11-March-2005:15:54 ==========  v26  =================
=== 20-May-2005:15:58 ==========  v27  =================
=== 25-May-2005:12:04 ==========  v27r1  =================
=== 14-July-2005:17:07 ==========  v28  =================
=== 28-September-2005:15:35 ==========  v28r1  =================
=== 06-October-2005:15:38 ==========  v29  =================
=== 20-January-2006:14:46 ==========  v29r1  =================

 31-March-2006 (Boda Franek)
 
  Class NmdPtnr   method Name name()  changed to  const Name& name();
  Files : nmdptnr.hxx & nmdptnr.cxx
  for the test what it does see ~franek/refReturnValue.cxx
=== 31-March-2006:17:27 ==========  v30  =================
=== 19-May-2006:20:34 ==========  v31  =================
=== 21-May-2006:21:01 ==========  v31r1  =================
  7-Sep-2006  (Boda Franek)
    Class Name  : new constructor, that just reserves space.  name.cxx&hxx

  19-Oct-2006  (Boda Franek)
  
     utilities.cxx   subroutine getString which processes parameter strings
                     encountered in SML code makes sure that these are properly
		     escaped
    
  23-May-2007 (Boda Franek)
     Class Name  : new method subString    name.hxx & cxx
     
     smixx_parstring_util.c  ...suite of subroutines dealing with parameter
                                strings. This has been developed since Sep 2006
    
=== 25-July-2007:14:58 ==========  v32  =================

 3-Aug-2007 (Boda Franek)
 
  - smixx_parstring_util.c    bug fixed:  an empty string on input will now
                         generate an empty string on output, when the
			 output pointer is not NULL. This was fixed in:
			 smixx_escape_slash, smixx_unescape & smixx_escape
			 
			 Redundant function smixx_escape_toprint & 
			                    extract_parvalue_to_temp   removed
 
=== 07-August-2007:11:55 ==========  v32r1  =================
=== 25-August-2007:13:31 ==========  v32r2  =================
=== 28-September-2007:15:29 ==========  v32r3  =================
=== 07-October-2007:16:50 ==========  v32r4  =================
=== 12-November-2007:14:40 ==========  v32r5  =================

  28-Mar-2008 (Boda Franek)
  
  <class name>:: removed from some method names in namelist.hxx and
                                                   nmdptnrlist.hxx
    The new compilers do not tolerate it any more.
    
=== 31-March-2008:15:41 ==========  v32r6  =================

  26-May-2008 (Boda Franek)
  
  - nmdptnrlist.cxx (hxx)  small bug fixed in method out
  
=== 11-June-2008:15:51 ==========  v33  =================
  23-Jun-2008  (Boda Franek)
  
    - nmdptnrlist.cxx   fixed memory leak in method add
    
    
=== 02-July-2008:12:44 ==========  v33r1  =================
=== 16-July-2008:17:11 ==========  v33r2  =================
=== 06-October-2008:11:30 ==========  v33r3  =================
=== 10-October-2008:16:04 ==========  v34  =================
=== 16-October-2008:15:52 ==========  v34r1  =================
=== 11-November-2008:12:56 ==========  v34r2  =================
=== 03-December-2008:13:17 ==========  v35  =================

  16-Dec-2008  (Boda Franek)
  
  - smlline.cxx   method 'instructionLine' now recognises 'wait'
                  instruction

  13-Jan-2009  (Boda Franek)
  
  - name.hxx (cxx)  new method 'trimFront' removes blanks ans spaces at the
                    begining of the string
		    
  26-Jan-2009  (Boda Franek)
  
    - namelist.cxx   fixed memory leak in method add
    
    - namelist.cxx (hxx)  2 new methods:
    		1) int isPresent(const Name& name)    finds if the name is
						present in the list
		2) void add(const NameVector& namevec)  adds namevec to the
		         list. Names already in the list are not added

    - nmdptnrlist.cxx(hxx) 2 new methods:
    		1) int remove(const Name& name)	 only name is sufficient to
		                   remove the complete item
		2) void* pointer( Name& name )  find the pointer associated
		                    with the name.
				    
				    
=== 11-February-2009:14:48 ==========  v35r1  =================
=== 07-April-2009:14:07 ==========  v35r2  =================
=== 31-July-2009:15:49 ==========  v36  =================
=== 06-August-2009:15:54 ==========  v36r1  =================

  17-Aug-2009  (Boda Franek)
  
   Class  SMLline (smlline.hxx(cxx)):  2 new methods added used for
                                       diagnistic printing:
   
       1) void out(int jst, int jend) 
       
       2) void indicateCharacter(char* msg, int j)
       
       
=== 27-August-2009:17:17 ==========  v37  =================
=== 02-September-2009:14:44 ==========  v37r1  =================
=== 07-October-2009:12:46 ==========  v37r2  =================
=== 10-November-2009:18:53 ==========  v37r3  =================
=== 13-November-2009:14:59 ==========  v37r4  =================

  04-Dec-2009  (Boda Franek)
  
  - Class Registrar (registrar.hxx(cxx)) :
  	new method   'gimeName(void* ptn)' ... given ptn, it will find the
	             corresp. name under which it was registered. 
		     
  - Class SMLline   method  primKeyword
           the method will recognise union of object sets and will mark it as
	   type 5	     

  08-Jan-2010  (Boda Franek)
  
  -  Class   'NmdPtnrList'  (nmdptnrlist.hxx(cxx))
       method  'void* pointer( Name&) const' ... argument was made const
       
  20-Jan-2010  (Boda Franek)

  -  Class   'NmdPtnrList'  (nmdptnrlist.hxx(cxx))
       bug fixed in the new method  'void* pointer( Name&) const' 
         
  
=== 20-January-2010:16:26 ==========  v38  =================

  27-Apr-2010  (Boda Franek)
  
  - Class SMLline    method  instructionLine
            the method will recognise  create_object  instruction

  28-May-2010  (Boda Franek)
  
  
	    
  - Class Name    new method   removeLastChar
  
=== 21-June-2010:15:54 ==========  v39  =================
=== 02-September-2010:15:31 ==========  v40  =================
=== 21-November-2010:13:22 ==========  v41  =================
=== 06-January-2011:16:18 ==========  v42  =================
=== 04-February-2011:15:29 ==========  v42r1  =================

11-Feb-2011  (Boda Franek)

 - fixing compilation warnings in :
     smixx_parstring_util.c, nmdptnrlist.cxx, name.cxx, namevector.cxx and
     smlline.cxx
     
17-Feb-2011  (Boda Franek)

   File utilities.cxx :
   
   - Bug fixed in function 'process_line_forTrans'. It was uppercasing
      also inside double quotes. Since this function is called only
      from 'getHeader' of Condition class which is used to generate comments
      from condition string, it is not serious. Especially as condition
      strings do not contain any double quotes.
      
   - fixing a few compilation warnings
   
29-Jun-2011  (Boda Franek)

  
  - Class SMLline    method  instructionLine
            the method will recognise 'sleep'  instruction
=== 27-July-2011:16:13 ==========  v43r0  =================

21-Oct-2011 (Boda Franek)

   - Class NameList    new method  'add(NameList& list)' - will add the items
              from list unless already present.
	      
=== 29-November-2011:16:00 ==========  v44r0  =================
=== 15-December-2011:15:36 ==========  v45r0  =================
=== 20-January-2012:14:16 ==========  v45r1  =================

16-Feb-2012  (Boda Franek)

   
    - file 'utilities.cxx'  function  'getValue'
    
     Bug fixed for the case when string constant value has 'blank' as the
     only delimitersvn status
      
24-Feb-2012  (Boda Franek)

    - file 'utilities.cxx & hxx'
         1) new function: 'check_compname' checks for composite names
         2) function  'getValue'   uses the new function
	 
13 March 2012 (Boda F.)

    Bug fixed in 'check_compname'
    
19 July 2012  (B. Franek)

    - two new files:  paroperand.cxx & hxx
       moved here from 'translator' directory

31 July 2012 (B. Franek)

   class 'ParOperand' : 4 new public methods to retrieve the private data.
   
   	Name& valueType();  Name& value(); Name& parName(); and
	                                   Name& ownerObjName();
	Files modified: paroperand.hxx & .cxx
					   
07 August 2012 (B. Franek)

  class 'ParOperand' : new public 'void thisObjPar()'
     it will change operandType to COMPNAME  and set ownerObjName to THIS.
     
14 August 2012 (B.Franek)

  a small bug fixed in function 'getValue'   file:utilities.cxx
  
=== 31-August-2012:11:18 ==========  v46r0  =================

07 September 2012 (B.Franek)

  Bug Fixed:  paroperand.cxx  ... not enough space reserved in 'typevch' aray.
  
=== 26-September-2012:12:33 ==========  v46r1  =================

25 October 2012 (B.Franek)

    Bug fixed
    ---------
    
    class 'ParOperand'  all the private data has to be initialised in
        the class constructor.
=== 19-November-2012:14:31 ==========  v46r2  =================

15 January 2013 (B.Franek)

   Bug fixed
   ---------
   class 'ParOperand' : Parameter operand can also be delimited by "="
   
=== 28-January-2013:16:36 ==========  v46r3  =================

  -> 30 July 2013  (B.Franek)
  
  class 'ParOperand'
  
      new method 'setValueType(Name& valueType)'
      
      new method 'Name printingName()'
           prints its name in a convenient format
	   
  -> 15 August 2013  (B.Franek)
  
   class 'ParOperand'
   
      a) method 'out(...)' improved
      
      b) method 'thisObjPar()'  BUG fixed

   12 Feb 2014 (B.Franek)
   
   class 'SMLline'
   
     implemented method 'int linNum()' ... returns the line number
          and           'Name lineBody()' ... returns the line itself
	  
  -> 11 April 2014 (B.Franek)
  
   - new class 'ErrorWarning' keeping static method 'printHead' for unified
     Error/Warning messages.
     new files: errorwarning.hxx & cxx
     
   - 'ParOperand' (paroperand.cxx)
    
          method 'initFromSMLcode'
	      a) added checking error returned from 'getValue' function
	      
	      b) converted the existion error prints to the unified format
	      
   
         
=== 30-June-2014:15:16 ==========  v47  =================

  -> 15 July 2014 (B. Franek)
  
   - utilities.cxx    function 'int specialCode(...)'
   
         This function has been supplying to Translator the SML code
	 for the special object '&ALLOC'.
	 From now on it will also supply the SML code for another special
	 object '&DOMAIN'. This object is intended to be used for communicating
	 directly with State Manager. At the moment, its code is:
	 
	     Object : &DOMAIN
	     State : READY
	           action : DIAG (int LEVEL = 0 )
		          terminate_action / state = READY
			  
	 and it will be used to switch the level of diagnostic printing
	 in State Manager.

 -> 30 July 2014 (B. Franek)

  - utilities.hxx ... extnsive writeup written for the following functions:

            char* firstNonBlankPtn(char str[])
            char firstNonBlank(SMLlineVector* pSMLcode,
                      const int ist,const int jst,...)
            char* getNextToken(char str[], const char del[],Name& token)
            char getNextToken(SMLlineVector* pSMLcode,
                              const int ist,const int jst,const char del[],...)

 - utilities.cxx .. many comments included in the code of:

            char firstNonBlank(SMLlineVector* pSMLcode,
                      const int ist,const int jst,...)
             char getNextToken(SMLlineVector* pSMLcode,
                              const int ist,const int jst,const char del[],...)

 -> 11 August 2014 (B.Franek)
 
  - class 'ParOperand'
      a) new protected method 
            'void checkForCast(SMLline& line, int& jst, int& jnext)'
	    
	   Operand name is now allowed to be preceeded by a 'cast'.
	   That is one of (S), (STRING), (I), (INT), (F) or (FLOAT).
	   The function assumes that operand name starts with jstth
	   col of line and checks wheather it begins with cast, in which
	   case it sets _tobeCastedTo to STRING, INT or FLOAT. It then sets
	   jnext to the col where the proper name begins. This way
	   the rest of the parsing code can proceed as before.
	   
      b) new private data  'Name _tobeCastedTo'    
	    
      c) new public method
            'Name& tobeCastedTo()'  retrieving the above private data

-> 20-Aug-2014 (B.Franek)


    class ParOperand

        - new method 'setValue(Name& value)' ... set the '_value' to the 
                     value of referenced parameter. This is clearly only 
                     used in the State Manager when the actual values 
                     become known.

        - new method 'setCast(Name& cast)'  ... sets the value of the 
                                               '_tobeCastedTo'

        - new method 'operValueType()'  ... retrieves the final operand
                        value type after all the casting has been done.
             
        - paroperand.hxx ... oxygen type writeup added and the code 
                             re-organised a bit.

        - instead using "UNKNOWN" for the initial value private data, we
                         use "".


-> 31-Aug-2014 (B.Franek)

    - class ParOperand
         - new private data  'Name _operValueType' this is the operand
	                      value type after the possible casting was
			      considered.
			      
	 - new private data  'int _castingRequested'.
	                        0 - no casting
				1 - user casting in SML
				2 - imposed by Translator
				3 - imposed by Translator and overriding user
				    cast
				    
	 - new public method 'int calcOperValueType()' ... calculates the
	                      operand value type from the type of ref parameter
			      and possible casting.
			      return
			        1 - success
				2 - casing constant, casting ignored
				-1 - casting STRING to FLOAT not allowed.			    
          - new public method 'void outShort() const' ... prints one line info
	 
          - new public method 'int castingRequested()' ... retieves the 
                                                relevant private data
						
-> 07-Sep-2014 (B.Franek)

    - class ParOperand
		   
	  - method 'outSobj'  ... outputs '_operValueType'. This will change
	                      .sobj file
    
          - method 'initFromSobj_firstLine' &
	           'initFromSobj_nextLine'  are reading the '_operValueType'
		   
-> 11-Sep-2014  (B.Franek)

    - class ParOperand
    
           Bug found in method 'checkForCast'....have to ignore case
	   
=== 12-September-2014:11:49 ==========  v47r1  =================
